// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	errs "github.com/danisbagus/go-common-packages/errs"
	domain "github.com/danisbagus/matchoshop/internal/core/domain"

	mock "github.com/stretchr/testify/mock"
)

// ProductProductCategoryRepo is an autogenerated mock type for the ProductProductCategoryRepo type
type ProductProductCategoryRepo struct {
	mock.Mock
}

// BulkInsert provides a mock function with given fields: data
func (_m *ProductProductCategoryRepo) BulkInsert(data []domain.ProductProductCategory) *errs.AppError {
	ret := _m.Called(data)

	var r0 *errs.AppError
	if rf, ok := ret.Get(0).(func([]domain.ProductProductCategory) *errs.AppError); ok {
		r0 = rf(data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*errs.AppError)
		}
	}

	return r0
}

// DeleteAll provides a mock function with given fields: productID
func (_m *ProductProductCategoryRepo) DeleteAll(productID int64) *errs.AppError {
	ret := _m.Called(productID)

	var r0 *errs.AppError
	if rf, ok := ret.Get(0).(func(int64) *errs.AppError); ok {
		r0 = rf(productID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*errs.AppError)
		}
	}

	return r0
}

type mockConstructorTestingTNewProductProductCategoryRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewProductProductCategoryRepo creates a new instance of ProductProductCategoryRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProductProductCategoryRepo(t mockConstructorTestingTNewProductProductCategoryRepo) *ProductProductCategoryRepo {
	mock := &ProductProductCategoryRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
