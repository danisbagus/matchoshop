// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	errs "github.com/danisbagus/go-common-packages/errs"
	domain "github.com/danisbagus/matchoshop/internal/core/domain"

	mock "github.com/stretchr/testify/mock"
)

// OrderService is an autogenerated mock type for the OrderService type
type OrderService struct {
	mock.Mock
}

// Create provides a mock function with given fields: form
func (_m *OrderService) Create(form *domain.OrderDetail) (*domain.OrderDetail, *errs.AppError) {
	ret := _m.Called(form)

	var r0 *domain.OrderDetail
	if rf, ok := ret.Get(0).(func(*domain.OrderDetail) *domain.OrderDetail); ok {
		r0 = rf(form)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.OrderDetail)
		}
	}

	var r1 *errs.AppError
	if rf, ok := ret.Get(1).(func(*domain.OrderDetail) *errs.AppError); ok {
		r1 = rf(form)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errs.AppError)
		}
	}

	return r0, r1
}

// GetDetail provides a mock function with given fields: ID
func (_m *OrderService) GetDetail(ID int64) (*domain.OrderDetail, *errs.AppError) {
	ret := _m.Called(ID)

	var r0 *domain.OrderDetail
	if rf, ok := ret.Get(0).(func(int64) *domain.OrderDetail); ok {
		r0 = rf(ID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.OrderDetail)
		}
	}

	var r1 *errs.AppError
	if rf, ok := ret.Get(1).(func(int64) *errs.AppError); ok {
		r1 = rf(ID)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errs.AppError)
		}
	}

	return r0, r1
}

// GetList provides a mock function with given fields: userID
func (_m *OrderService) GetList(userID int64) ([]domain.OrderDetail, *errs.AppError) {
	ret := _m.Called(userID)

	var r0 []domain.OrderDetail
	if rf, ok := ret.Get(0).(func(int64) []domain.OrderDetail); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.OrderDetail)
		}
	}

	var r1 *errs.AppError
	if rf, ok := ret.Get(1).(func(int64) *errs.AppError); ok {
		r1 = rf(userID)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errs.AppError)
		}
	}

	return r0, r1
}

// UpdatePaid provides a mock function with given fields: form
func (_m *OrderService) UpdatePaid(form *domain.PaymentResult) *errs.AppError {
	ret := _m.Called(form)

	var r0 *errs.AppError
	if rf, ok := ret.Get(0).(func(*domain.PaymentResult) *errs.AppError); ok {
		r0 = rf(form)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*errs.AppError)
		}
	}

	return r0
}
